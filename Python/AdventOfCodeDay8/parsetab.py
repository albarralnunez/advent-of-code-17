
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'REGISTER NE EQ LE GE LT GT NUMBER IF INC DEC\n    instruction_list : instruction\n                     | instruction_list instruction\n    \n    instruction : REGISTER operations NUMBER condition\n    \n    operations : INC\n               | DEC\n    \n    condition : IF REGISTER comparators NUMBER\n    \n    comparators : LE\n                | GE\n                | LT\n                | GT\n                | EQ\n                | NE\n    '
    
_lr_action_items = {'REGISTER':([0,1,2,4,9,10,19,],[3,3,-1,-2,-3,11,-6,]),'$end':([1,2,4,9,19,],[0,-1,-2,-3,-6,]),'INC':([3,],[6,]),'DEC':([3,],[7,]),'NUMBER':([5,6,7,12,13,14,15,16,17,18,],[8,-4,-5,19,-7,-8,-9,-10,-11,-12,]),'IF':([8,],[10,]),'LE':([11,],[13,]),'GE':([11,],[14,]),'LT':([11,],[15,]),'GT':([11,],[16,]),'EQ':([11,],[17,]),'NE':([11,],[18,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'instruction_list':([0,],[1,]),'instruction':([0,1,],[2,4,]),'operations':([3,],[5,]),'condition':([8,],[9,]),'comparators':([11,],[12,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> instruction_list","S'",1,None,None,None),
  ('instruction_list -> instruction','instruction_list',1,'p_instruction_list','parser.py',90),
  ('instruction_list -> instruction_list instruction','instruction_list',2,'p_instruction_list','parser.py',91),
  ('instruction -> REGISTER operations NUMBER condition','instruction',4,'p_instruction','parser.py',103),
  ('operations -> INC','operations',1,'p_operations','parser.py',119),
  ('operations -> DEC','operations',1,'p_operations','parser.py',120),
  ('condition -> IF REGISTER comparators NUMBER','condition',4,'p_condition','parser.py',127),
  ('comparators -> LE','comparators',1,'p_comparators','parser.py',136),
  ('comparators -> GE','comparators',1,'p_comparators','parser.py',137),
  ('comparators -> LT','comparators',1,'p_comparators','parser.py',138),
  ('comparators -> GT','comparators',1,'p_comparators','parser.py',139),
  ('comparators -> EQ','comparators',1,'p_comparators','parser.py',140),
  ('comparators -> NE','comparators',1,'p_comparators','parser.py',141),
]
